name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetching tags
        run: git fetch --tags -f || true

      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22.18.0
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Setup npm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci || npm install
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish in NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate Changelog
        id: generate_changelog
        run: |
          changelog=$(npm run changelog:last --silent)
          changelog="${changelog//$'\n'/'%0A'}"
          changelog="${changelog//$'\r'/'%0D'}" 
          echo -e "set-output name=changelog::${changelog-<empty>}\n"
          echo -e "::set-output name=changelog::${changelog}\n"

      - name: Prepare Node Portable
        run: |
          rm -rf node-portable
          mkdir node-portable
          curl -L https://nodejs.org/dist/v20.19.3/node-v20.19.3-win-x64.zip -o node.zip
          unzip node.zip -d node-portable
          rm node.zip

      - name: Package Project
        run: |
          mkdir release-package
          cp -r index.js movies.js series.js ".env.example" "cat-movies.json" "cat-series.json" "sincronizar.bat" "XUI Organizer.exe" node_modules package.json package-lock.json node-portable utils validations release-package/
          cp -r .env release-package/ || echo ".env not found, skipping"

      - name: Zip Release Package
        run: |
          cd release-package
          zip -r ../iptv-vod-organizer-${{ github.run_number }}.zip .


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.generate_changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: >
            iptv-vod-organizer-${{ github.run_number }}.zip

          